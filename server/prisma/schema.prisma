 
generator client {
  provider = "prisma-client-js"
  
}
datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")  
 }
model User {
  id              Int      @id @default(autoincrement())
  name            String   @db.VarChar(255)
  email           String   @unique @db.VarChar(255)
  profilePicture  String?  @db.Text
  password        String   @db.VarChar(255)
  createdAt       DateTime @default(now()) @db.Timestamptz
  updatedAt       DateTime? @updatedAt @db.Timestamptz
  blogs           Blog[]
  comments        Comment[]
  likes           Like[]
}

model Blog {
  id          Int      @id @default(autoincrement())
  userId      Int
  content     String   @db.Text
  createdAt   DateTime @default(now()) @db.Timestamptz
  updatedAt   DateTime? @updatedAt @db.Timestamptz
  status      String?  @db.VarChar
  title       String   @db.VarChar
  authorName  String?  @db.VarChar
  authorImage  String?  @db.Text
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments     Comment[]
  likes       Like[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  blogId    Int
  userId    Int
  content   String   @db.Text
  createdAt DateTime @default(now()) @db.Timestamptz
  updatedAt DateTime? @updatedAt @db.Timestamptz
  blog      Blog     @relation(fields: [blogId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Like {
  id      Int      @id @default(autoincrement())
  blogId  Int
  userId  Int
  createdAt DateTime @default(now()) @db.Timestamptz
  blog    Blog     @relation(fields: [blogId], references: [id], onDelete: Cascade)
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}